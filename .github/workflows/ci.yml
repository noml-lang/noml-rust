name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # ============================================================================
  # Core Testing - Cross-platform matrix
  # ============================================================================
  test:
    name: Test Suite (${{ matrix.os }}, ${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, 1.82.0]  # Current MSRV
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting (stable only)
        if: matrix.rust == 'stable' && matrix.os == 'ubuntu-latest'
        run: cargo fmt --all -- --check

      - name: Clippy (stable only)
        if: matrix.rust == 'stable' && matrix.os == 'ubuntu-latest'
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check compilation
        run: cargo check --all-targets --all-features

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Test no features
        run: cargo test --no-default-features --verbose

      - name: Test individual features
        run: |
          cargo test --no-default-features --features async
          cargo test --no-default-features --features chrono

      - name: Run examples
        run: cargo run --example demo

      - name: Test documentation
        if: matrix.rust == 'stable' && matrix.os == 'ubuntu-latest'
        run: cargo test --doc --all-features

  # ============================================================================
  # Security & Quality (Ubuntu only)
  # ============================================================================
  security:
    name: Security & Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install security tools
        run: |
          cargo install --locked cargo-audit
          cargo install --locked cargo-deny

      - name: Security audit
        run: cargo audit

      - name: License check
        run: cargo deny check

  # ============================================================================
  # CI Success Gate
  # ============================================================================
  ci-success:
    name: CI Success
    if: always()
    needs: [test, security]
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "Test job failed"
            exit 1
          fi
          if [[ "${{ needs.security.result }}" != "success" ]]; then
            echo "Security job failed"
            exit 1
          fi
          echo "All CI jobs passed!"